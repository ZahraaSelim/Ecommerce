@model Ecommerce.ViewModels.ProductListViewModel
@{
    ViewData["Title"] = Model.CategoryId.HasValue ? $"Products in Category" : "All Products";
}
<div class="container mt-5">
    <div class="text-center my-4">
        <h2>@(Model.CategoryId.HasValue ? "Products in Category" : "All Products")</h2>
    </div>
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    <div class="row">
        @foreach (var product in Model.Products)
        {
            <div class="col-md-3 mb-4">
                <div class="card product-card">
                    <a asp-action="Details" asp-route-id="@product.Id" class="card-link"></a>
                    <img src="@product.ImageUrl" class="card-img-top product-image" alt="@product.Name" />
                    <div class="card-body text-center">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Price.ToString("C")</p>
                        <p class="card-text">Stock: @product.StockQuantity</p>
                        @if (product.StockQuantity > 0)
                        {
                            <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                <input type="hidden" name="productId" value="@product.Id" />
                                <input type="number" name="quantity" value="1" min="1" max="@product.StockQuantity" class="form-control d-inline w-50" />
                                <button type="submit" class="btn btn-primary add-to-cart-btn mt-2">Add to Cart</button>
                            </form>
                        }
                        else
                        {
                            <button class="btn btn-secondary" disabled>Out of Stock</button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    <nav aria-label="Product pagination">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="List" asp-route-categoryId="@Model.CategoryId" asp-route-page="@(Model.CurrentPage - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo; Previous</span>
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="List" asp-route-categoryId="@Model.CategoryId" asp-route-page="@i">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="List" asp-route-categoryId="@Model.CategoryId" asp-route-page="@(Model.CurrentPage + 1)" aria-label="Next">
                    <span aria-hidden="true">Next &raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}